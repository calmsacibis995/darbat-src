/* 
 * This is an automatically-generated file.
 * Source file  : test/input/const_propagation.idl4
 * Output file  : -
 * Platform     : V4 Generic
 * Mapping      : CORBA C
 *
 * Generated by Magpie VERSION_REMOVED
*/

#define IDL4_OMIT_FRAME_POINTER 0 /* Unimplemented */
#define IDL4_USE_FASTCALL 0 /* Unimplemented */
#define IDL4_NEED_MALLOC 0 /* Unimplemented */
#define IDL4_API v4
#define IDL4_ARCH generic

#define MAGPIE_BYTES_PER_WORD (sizeof(L4_Word_t))

#ifdef __cplusplus
extern "C" {
#endif
#include "idl4/idl4.h"
#ifdef __cplusplus
}
#endif





#if !defined(__-__)
#define __-__


#define KEYPAD_UUID_DEVICE 42

#define KEYPAD_UUID_DEVICE2 (KEYPAD_UUID_DEVICE+1)



/* Interface keypad_interface_device */
void keypad_interface_device_server(void);
void keypad_interface_device_discard(void);


#define KEYPAD_INTERFACE_DEVICE_DEFAULT_VTABLE { service_keypad_interface_device_create }
#define KEYPAD_INTERFACE_DEVICE_DEFAULT_VTABLE_SIZE 1


#define KEYPAD_INTERFACE_DEVICE_MAX_FID 0
#define KEYPAD_INTERFACE_DEVICE_MSGBUF_SIZE 0 /* Unimplemented */
#define KEYPAD_INTERFACE_DEVICE_STRBUF_SIZE 0 /* Unimplemented */
#define KEYPAD_INTERFACE_DEVICE_FID_MASK 0x0







typedef union {
	struct {
		long _msgtag;
		long driver;
		
	} _in;
	struct {
		long _spacer[__L4_NUM_MRS];
		long _msgtag;
		long __retval;
		
	} _out;
	struct {
		long _spacer[__L4_NUM_MRS*2];
		idl4_inverse_stringitem _str[16];
		long _acceptor;
	} _buf;
} _param_keypad_interface_device_create;

long service_keypad_interface_device_create(L4_ThreadId_t _caller, _param_keypad_interface_device_create *_par);

inline long keypad_interface_device_create_implementation (CORBA_Object _caller, long driver, idl4_server_environment *_env);


/* Number of output words is the size of the structure minus padding and message tag. */

#define _MAGPIE_KEYPAD_INTERFACE_DEVICE_CREATE_OUTPUT_BYTES (sizeof(_par->_out) - (sizeof(long) * __L4_NUM_MRS) - (sizeof(long)))



#define IDL4_PUBLISH_KEYPAD_INTERFACE_DEVICE_CREATE(_func) long service_keypad_interface_device_create(L4_ThreadId_t _caller, _param_keypad_interface_device_create *_par) { \
	idl4_server_environment _env; \
	_env._action = 0;\
\
	/* invoke service */ \
	_par->_out.__retval = _func(_caller, _par->_in.driver, &_env); \
\
	if (IDL4_EXPECT_TRUE(_env._action == 0)) {\
		/* Why marshal things to themselves? */ \
		/* jump back */ \
		/* the weird numbers: (2 * num fpages) << 6 + (num output words ) */ \
		_par->_out._msgtag = (0 << 6) + \
			(_MAGPIE_KEYPAD_INTERFACE_DEVICE_CREATE_OUTPUT_BYTES / MAGPIE_BYTES_PER_WORD); \
		return (0 << 6) + \
			(_MAGPIE_KEYPAD_INTERFACE_DEVICE_CREATE_OUTPUT_BYTES / MAGPIE_BYTES_PER_WORD); \
		/*was 1 */\
	} \
	return -1; \
}




#define IDL4_PUBLISH_keypad_interface_device_create IDL4_PUBLISH_KEYPAD_INTERFACE_DEVICE_CREATE
static inline void keypad_interface_device_create_reply(CORBA_Object _client , long __retval )
{
	struct _reply_buffer {
		struct {
			long _msgtag;
			
			long __retval;
		} _out;
	} _buf;
	struct _reply_buffer *_par = &_buf;

	/* Marshal reply */
	
	_par->_out.__retval = __retval;
	
	/* send message */

	_buf._out._msgtag = 1 + (0 << 6);
	L4_MsgLoad((L4_Msg_t *)((void *)_par));
	L4_Reply(_client);
}




/* Interface keypad_interface_device2 */
void keypad_interface_device2_server(void);
void keypad_interface_device2_discard(void);


#define KEYPAD_INTERFACE_DEVICE2_DEFAULT_VTABLE { service_keypad_interface_device2_create }
#define KEYPAD_INTERFACE_DEVICE2_DEFAULT_VTABLE_SIZE 1


#define KEYPAD_INTERFACE_DEVICE2_MAX_FID 0
#define KEYPAD_INTERFACE_DEVICE2_MSGBUF_SIZE 0 /* Unimplemented */
#define KEYPAD_INTERFACE_DEVICE2_STRBUF_SIZE 0 /* Unimplemented */
#define KEYPAD_INTERFACE_DEVICE2_FID_MASK 0x0







typedef union {
	struct {
		long _msgtag;
		long driver;
		
	} _in;
	struct {
		long _spacer[__L4_NUM_MRS];
		long _msgtag;
		long __retval;
		
	} _out;
	struct {
		long _spacer[__L4_NUM_MRS*2];
		idl4_inverse_stringitem _str[16];
		long _acceptor;
	} _buf;
} _param_keypad_interface_device2_create;

long service_keypad_interface_device2_create(L4_ThreadId_t _caller, _param_keypad_interface_device2_create *_par);

inline long keypad_interface_device2_create_implementation (CORBA_Object _caller, long driver, idl4_server_environment *_env);


/* Number of output words is the size of the structure minus padding and message tag. */

#define _MAGPIE_KEYPAD_INTERFACE_DEVICE2_CREATE_OUTPUT_BYTES (sizeof(_par->_out) - (sizeof(long) * __L4_NUM_MRS) - (sizeof(long)))



#define IDL4_PUBLISH_KEYPAD_INTERFACE_DEVICE2_CREATE(_func) long service_keypad_interface_device2_create(L4_ThreadId_t _caller, _param_keypad_interface_device2_create *_par) { \
	idl4_server_environment _env; \
	_env._action = 0;\
\
	/* invoke service */ \
	_par->_out.__retval = _func(_caller, _par->_in.driver, &_env); \
\
	if (IDL4_EXPECT_TRUE(_env._action == 0)) {\
		/* Why marshal things to themselves? */ \
		/* jump back */ \
		/* the weird numbers: (2 * num fpages) << 6 + (num output words ) */ \
		_par->_out._msgtag = (0 << 6) + \
			(_MAGPIE_KEYPAD_INTERFACE_DEVICE2_CREATE_OUTPUT_BYTES / MAGPIE_BYTES_PER_WORD); \
		return (0 << 6) + \
			(_MAGPIE_KEYPAD_INTERFACE_DEVICE2_CREATE_OUTPUT_BYTES / MAGPIE_BYTES_PER_WORD); \
		/*was 1 */\
	} \
	return -1; \
}




#define IDL4_PUBLISH_keypad_interface_device2_create IDL4_PUBLISH_KEYPAD_INTERFACE_DEVICE2_CREATE
static inline void keypad_interface_device2_create_reply(CORBA_Object _client , long __retval )
{
	struct _reply_buffer {
		struct {
			long _msgtag;
			
			long __retval;
		} _out;
	} _buf;
	struct _reply_buffer *_par = &_buf;

	/* Marshal reply */
	
	_par->_out.__retval = __retval;
	
	/* send message */

	_buf._out._msgtag = 1 + (0 << 6);
	L4_MsgLoad((L4_Msg_t *)((void *)_par));
	L4_Reply(_client);
}





#endif //__-__
