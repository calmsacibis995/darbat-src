/* 
 * This is an automatically-generated file.
 * Source file  : test/input/char_ptr_arg.idl4
 * Output file  : -
 * Platform     : V4 Generic
 * Mapping      : CORBA C
 *
 * Generated by Magpie VERSION_REMOVED
*/

#define IDL4_OMIT_FRAME_POINTER 0 /* Unimplemented */
#define IDL4_USE_FASTCALL 0 /* Unimplemented */
#define IDL4_NEED_MALLOC 0 /* Unimplemented */
#define IDL4_API v4
#define IDL4_ARCH generic




/* NOTE: Change the following line to correctly include the service stubs. */
#include "test/input/char_ptr_arg_service.h"






IDL4_INLINE int iguana_pd_create_memsection_implementation(CORBA_Object _caller, char *somestr, int *result, idl4_server_environment *_env)
{
	int retval;
	
	/* Implementation of iguana_pd::create_memsection */
	return retval;
}

/* Link the name of the function above with the name defined in the default vtable. */
IDL4_PUBLISH_IGUANA_PD_CREATE_MEMSECTION(iguana_pd_create_memsection_implementation);



/* Use the default dispatch table defined in the service header. */
void * iguana_pd_vtable[IGUANA_PD_DEFAULT_VTABLE_SIZE]
		= IGUANA_PD_DEFAULT_VTABLE;

void server(void)
{
	L4_ThreadId_t partner;
	L4_MsgTag_t msgtag;
	idl4_msgbuf_t msgbuf;
	long cnt;

	while (1) {
		partner = L4_nilthread; /* Our initial reply is to the nilthread. */
		msgtag.raw = 0;
		cnt = 0;

		while (1) {
			idl4_reply_and_wait(&partner, &msgtag, &msgbuf, &cnt);
			if (idl4_is_error(&msgtag)) {
				/* FIXME: Add your error handler here. */
				printf("server: error sending IPC reply\n");
				break; /* Reset thread ID to nilthread & try again */
			}
			switch(magpie_get_interface_id(&msgbuf)) {
				
				case 22:
					idl4_process_request(&partner, &msgtag, &msgbuf, &cnt,
							iguana_pd_vtable
							[idl4_get_function_id(&msgtag) & IGUANA_PD_FID_MASK]);
					break;
				
			}
		}
	}
}


