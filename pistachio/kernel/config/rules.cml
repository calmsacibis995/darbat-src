######################################################################
##                
## Copyright (C) 2001-2004,  Karlsruhe University
##                
## File path:     config/rules.cml
## Description:   Rules for Pistachio's CML2 configuration system
##                
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
## 2. Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in the
##    documentation and/or other materials provided with the distribution.
## 
## THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
## ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
## ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
## FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
## DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
## OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
## HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
## LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
## OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
## SUCH DAMAGE.
##		 
## $Id: rules.cml,v 1.92 2004/09/07 09:25:36 ud3 Exp $
##		 
######################################################################

prefix "CONFIG_"	# Stripped at read time, prepended at save time

# symbol definitions
symbols
x86_platform	'Platform'
PLAT_PC99	'PC99 Compatible Machines (Standard PC)'

#
# main menu
#
main          'Pistachio Kernel Configuration System'


#
# hardware menu
#
arch            'Basic Architecture'

SMP		'Multiprocessor Support'
SMP_MAX_PROCS	'Maximum number of CPUs'
SMP_IDLE_POLL	'Poll XCPU queue on idle'

UNCACHED	'Run CPU uncached'

IOAPIC		'Use APIC+IOAPIC'
MAX_IOAPICS	'Maximum number of supported IO APICs'
APIC_TIMER_TICK 'Timer tick length for APIC'

MAX_NUM_ASIDS   'The maximum number of ASIDs'
PREEMPT_ASIDS   'Whether or not to pre-empt ASIDs'
BOOTMEM_PAGES	'The number of pages to reserve for the kernel' text

The kernel reserves an ammount of physical memory to use for kernel
data structures including TCBs, page tables and the MDB. This option
allows you to select the number of pages to reserve for the kernel.
.

#
# kernel menu
#
IPC_FASTPATH	'Fast IPC path'
DEBUG		'Enable Debugging mode'
PERFMON         'Enable Performance Monitoring'
SPIN_WHEELS	'Enable Spin Wheels' text

The Spin Wheels are characters displayed by the kernel on the top right
corner of the screen. On certain events such as interrupts or context
switches, the kernel displays a new character. This is helpful to identify
whether the kernel has crashed or not. However, it introduces a certain
performance penalty.
.


#
# debugger menu
#
KDB		'Enable Kernel Debugger'
kdb_console	'Kernel Debugger Console'
KDB_CONS_COM	'Serial Port'
KDB_CONS_KBD	'Keyboard'
KDB_COMPORT	'Kernel Debugger Serial Port'
KDB_COMSPEED	'Kernel Debugger Serial Port Speed'
KDB_ON_STARTUP	'Enter kernel debugger on startup'
KDB_BREAKIN	'Kernel Debugger breakin'
DEBUG_SYMBOLS	'Include debugging symbols in binary'

KDB_DISAS	'Enable Disassembler [GPL license]' text

The disassembler is implemented by code distributed under the terms of the
GPL license.  The disassembler code is statically linked to the kernel,
and thus subjects the entire kernel binary to the constraints of the GPL.
If you are dissatisfied with the terms of the GPL, answer no.
.

KDB_NO_ASSERTS 'Disable all ASSERT, WARNING, TRACE, etc.' text

By default, if the kernel debugger is enabled, numerous internal
run-time checks are performed through ASSERT(...) macros.  There are
also places in the code where a warning is emitted (WARNING) or other
output is generated (TRACE).  While these checks may allow to catch
kernel bugs early, they induce a non negligible overhead.

For benchmarking one would normally disable the kernel debugger
completely.  There may, however, be certain situations, where the
kernel debugger comes in handy during benchmarks.

If you want to run benchmarks and still need the kernel debugger, say
Yes here. If unsure, say No.
.

ASSERT_LEVEL   'Assert Level' text

0 - Only unconditional asserts are included.
1 - Only a limited number of asserts. Useful for production kernels.
2 - Normal level of asserts.
3 - Extra asserts for debugging are enabled.
4 - All asserts are enabled. This is useful for regression testing.
.


#
# trace submenu
#
VERBOSE_INIT	'Verbose initializion'
TRACEPOINTS	'Enable Tracepoints'
KMEM_TRACE	'Enable tracing of kernel memory'
TRACEBUFFER	'Enable Tracebuffer'
TRACEBUF_PAGES	'The number of pages to reserve for the trace buffer' text

The kernel reserves an ammount of physical memory to use for the tracebuffer.
This option allows you to select the number of pages to reserve. Note this
memory is taken from the BOOTMEM_PAGES thus there must be enough pages
available.
.

#
# codegen menu
#


# menus
hardware	'Hardware'
kernel		'Kernel'
debugger	'Debugger'
trace		'Trace Settings'
codegen		'Code Generator Options'
hardware_misc	'Miscellaneous'




menu hardware
	arch
	ia32_type
	ia64_type
	alpha_type
	mips64_type
	arm_type
	powerpc_type
	amd64_type
	x86_platform
	ia64_platform
	alpha_platform
	mips64_platform
	arm_platform
	powerpc_platform
	powerpc64_platform
	powerpc64_type
	sparc64_platform
	SMP { SMP_MAX_PROCS% SMP_IDLE_POLL}
	UNCACHED
	hardware_misc
	

choices arch    # Basic architecture
	ARCH_IA32
	ARCH_IA64
	ARCH_POWERPC
	ARCH_POWERPC64
	ARCH_AMD64
	ARCH_ALPHA
	ARCH_MIPS64
	ARCH_ARM
	ARCH_SPARC64
	default ARCH_IA32

choices powerpc_type
	CPU_POWERPC_IBM750
	CPU_POWERPC_PPC604
	default CPU_POWERPC_PPC604

choices amd64_type
	CPU_AMD64_OPTERON
	CPU_AMD64_SIMICS
	default CPU_AMD64_OPTERON

unless ARCH_POWERPC suppress dependent powerpc_type
unless ARCH_AMD64 suppress dependent amd64_type
unless ARCH_IA64 or ARCH_IA32 or ARCH_POWERPC or CPU_MIPS64_SB1 suppress dependent SMP
unless ARCH_MIPS64 suppress dependent UNCACHED
unless ARCH_IA32 and SMP suppress dependent SMP_IDLE_POLL


choices powerpc_platform
	PLAT_OFPPC
	default PLAT_OFPPC


unless ARCH_POWERPC suppress dependent powerpc_platform

choices x86_platform
	PLAT_PC99
	default PLAT_PC99


unless ARCH_IA32 or ARCH_AMD64 suppress dependent x86_platform

menu hardware_misc
	IOAPIC { MAX_IOAPICS% APIC_TIMER_TICK% }
	PPC_EXPOSE_OPIC
	MAX_NUM_ASIDS%
	PREEMPT_ASIDS
	BOOTMEM_PAGES%
	PROFILE_INTERVAL%
	PROFILE_SIZE%
	CPU_AMD64_SIMICS_SPEED%

default MAX_IOAPICS from 2
default APIC_TIMER_TICK from 1000
default PPC_EXPOSE_OPIC from n
unless ARCH_POWERPC suppress PPC_EXPOSE_OPIC
when ARCH_POWERPC or ARCH_ALPHA or ARCH_MIPS64 or ARCH_ARM or ARCH_POWERPC64 or ARCH_SPARC64  suppress IOAPIC
default MAX_NUM_ASIDS from 256
default PREEMPT_ASIDS from n
default BOOTMEM_PAGES from 1024
unless ARCH_MIPS64 or ARCH_ALPHA or ARCH_SPARC64  suppress MAX_NUM_ASIDS PREEMPT_ASIDS 
unless ARCH_MIPS64 or ARCH_ALPHA or ARCH_SPARC64 or ARCH_POWERPC64 or ARCH_ARM suppress BOOTMEM_PAGES
default SMP_MAX_PROCS from 4
default CPU_AMD64_SIMICS_SPEED from 100
unless CPU_AMD64_SIMICS suppress CPU_AMD64_SIMICS_SPEED

menu kernel
	IPC_FASTPATH
	DEBUG
	PPC_BAT_SYSCALLS
	IA32_SMALL_SPACES
	PPC64_TRASH_OF
        PERFMON
	SPIN_WHEELS

default IPC_FASTPATH from n
default PPC_BAT_SYSCALLS from y
unless ARCH_POWERPC suppress PPC_BAT_SYSCALLS
unless ARCH_POWERPC64 suppress PPC64_TRASH_OF
unless CPU_IA32_I686 or CPU_IA32_P4 or CPU_IA32_K8 or ARCH_IA64 or ARCH_AMD64 suppress dependent PERFMON
unless ARCH_IA64 or ARCH_POWERPC or ARCH_IA32 or ARCH_ALPHA or ARCH_MIPS64 or ARCH_AMD64 or ARCH_ARM suppress IPC_FASTPATH
unless ARCH_ALPHA or ARCH_AMD64 or ARCH_IA32 or ARCH_IA64 or ARCH_SPARC64 suppress SPIN_WHEELS

menu debugger
	KDB
	ppc_debug_consoles
	ppc64_debug_consoles
	kdb_console
	KDB_COMPORT@
	KDB_COMSPEED%
	KDB_DISAS
	KDB_ON_STARTUP
	KDB_BREAKIN
        KDB_NO_ASSERTS
	ASSERT_LEVEL%
	DEBUG_SYMBOLS
	trace

default DEBUG from y
unless DEBUG suppress dependent debugger
default KDB_COMPORT from 0x3f8 range 0x3F8 0x2F8 0x3E8 0x2E8
default KDB_COMSPEED from 115200 range 115200 57600 38400
unless KDB_CONS_COM suppress KDB_COMPORT KDB_COMSPEED
unless KDB suppress dependent kdb_console KDB_COMPORT KDB_COMSPEED KDB_DISAS KDB_ON_STARTUP KDB_BREAKIN ppc_debug_consoles
when ARCH_POWERPC suppress kdb_console KDB_COMPORT KDB_COMSPEED KDB_BREAKIN
when ARCH_POWERPC64 suppress KDB_COMPORT KDB_COMSPEED
unless ARCH_POWERPC suppress ppc_debug_consoles
unless ARCH_POWERPC64 suppress ppc64_debug_consoles
when ARCH_POWERPC64 suppress KDB_CONS_PSIM_COM
when ARCH_MIPS64 or ARCH_ALPHA or ARCH_ARM or ARCH_SPARC64 suppress kdb_console KDB_COMPORT KDB_COMSPEED
when ARCH_ALPHA or ARCH_ARM or ARCH_SPARC64 suppress KDB_DISAS
unless ARCH_AMD64 or ARCH_IA32 suppress DEBUG_SYMBOLS
default ASSERT_LEVEL from 2 range 0 - 4
when KDB_NO_ASSERTS suppress ASSERT_LEVEL


choices kdb_console
	KDB_CONS_KBD KDB_CONS_COM KDB_CONS_SKI
	default KDB_CONS_COM

menu trace
	VERBOSE_INIT
	TRACEPOINTS
	KMEM_TRACE
        TRACEBUFFER
	TRACEBUF_PAGES%
	IA32_KEEP_LAST_BRANCHES

unless KDB suppress VERBOSE_INIT TRACEPOINTS KMEM_TRACE
unless CPU_IA32_I686 suppress IA32_KEEP_LAST_BRANCHES

default TRACEBUFFER from n
default TRACEBUF_PAGES from 256
unless TRACEBUFFER suppress TRACEBUF_PAGES

menu codegen
	SYSV_ABI
	PPC_SEGMENT_LOOP
	PPC_MULTIWORD_INSTR

default SYSV_ABI from y
default PPC_MULTIWORD_INSTR from y
unless ARCH_POWERPC suppress SYSV_ABI PPC_SEGMENT_LOOP PPC_MULTIWORD_INSTR

menu main       # Configure the Pistachio kernel
	hardware
	kernel
	debugger
	codegen



derive IS_32BIT from ARCH_IA32 or ARCH_POWERPC or ARCH_ARM
derive IS_64BIT from ARCH_IA64 or ARCH_ALPHA or ARCH_MIPS64 or ARCH_AMD64 or ARCH_POWERPC64 or ARCH_SPARC64
derive BIGENDIAN from ARCH_POWERPC or ARCH_MIPS64 or ARCH_POWERPC64 or ARCH_SPARC64 or ARM_BIG_ENDIAN
when MIPS64_LITTLE_ENDIAN suppress BIGENDIAN
derive ACPI from ARCH_IA64
derive HAVE_MEMORY_CONTROL from ARCH_POWERPC64 or ARCH_MIPS64 or ARCH_ARM or ARCH_IA64

source "powerpc.cml"
source "powerpc64.cml"
source "ia32.cml"
source "ia64.cml"
source "amd64.cml"
source "alpha.cml"
source "mips64.cml"
source "arm.cml"
source "sparc64.cml"

#
# here comes the real stuff
#
start main			# Start with the menu named 'main'
#condition nohelp on EXPERT	# Only make undocumented symbols visible when this is on
#warndepend EXPERIMENTAL	# Append (EXPERIMENTAL) to dependent queries
#warndepend DANGEROUS
#warndepend OBSOLETE

# End
