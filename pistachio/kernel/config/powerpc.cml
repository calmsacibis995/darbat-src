######################################################################
#		 
# Copyright (C) 1999, 2000, 2001,  Karlsruhe University
#		 
# File path:	 config/powerpc.cml
# Description:	 rules for Pistachio's PowerPC CML2 configuration system
#		 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#		 
# $Id: powerpc.cml,v 1.10 2003/11/13 14:39:15 joshua Exp $
#		 
######################################################################

symbols

ARCH_POWERPC	'PowerPC'
powerpc_type	'Processor Type'
CPU_POWERPC_IBM750	"750"
CPU_POWERPC_PPC604	"604"

powerpc_platform	'Platform'
PLAT_OFPPC	"IEEE 1275 Open Firmware for PowerPC"

PPC_EXPOSE_OPIC	'Expose the interrupt controller to user space?' text
The kernel initializes and configures the interrupt controller.  It walks
the Open Firmware device tree to detect the mappings of interrupts to devices.
If device drivers reconfigure their interrupt settings, they will need 
access to the interrupt controller.  If so, then expose the interrupt 
controller to user space to permit a device driver to map it into
its address space.

Answer yes to this option to expose the open-pic to user space.
If unsure, answer no.
.

PPC_BAT_SYSCALLS	'Use an iBAT to globally map the system calls?' text
You can use an instruction BAT register to map the system calls into every
user address space.  This avoids tlb misses and page hash misses when 
executing system calls.  The only side-effect is that it gives user-level
applications execution access to most of the kernel (but not read access).
The alternative is to map the system calls into the user address space via 
the page table, which exposes smaller portions of the kernel to the user 
address space (but with read access).

Answer yes to use an instruction BAT.  Answer yes if unsure.
.

SYSV_ABI	'Use the SVR4 broken and slow ABI?' text
The gcc compiler offers two basic ABIs for the PowerPC: SVR4 and AIX.  The
SVR4 ABI offers the smaller stack footprint (when using the embedded 
extensions), and is thus more suitable for kernel usage.  The AIX ABI 
passes structures as arguments in the register file, while the SVR4 ABI always
passes structures indirectly with a pointer to a memory location.  To achieve
performance in a C++ kernel such as L4, one should try to pass structures 
and classes in the register file.

The L4 kernel uses a patched version of the SVR4 embedded ABI (eabi).
By default, the L4 kernel will try to compile using the -mfast gcc command 
line parameter, which modifies the SVR4 ABI to pass structures via the 
register file.  You need a patched version of gcc to support this feature.  
Otherwise, disable this option, and live with the slow code generated by the 
default SVR4 ABI.
.

PPC_SEGMENT_LOOP	"Use a loop to change the segment ID's?" text
To complete an address-space switch, the kernel updates a handful 
of segment registers.  You can choose between two implementations
to effect the segment ID switch.  One implementation uses straight-line
code without a loop.  The other implementation uses a loop.  The straight-line
implementation gains 4 cycles, but costs more than two instruction cache lines.

Enable this option to use the loop implementation.
.

PPC_MULTIWORD_INSTR	"Use multi-word load and store instructions?" text
Use the PowerPC's lmw and stmw instructions?  A single lmw or stmw instruction
can load or store multiple words.  When enabled, the exception path uses
these instructions to spill and restore register state, thus reducing the
instruction cache foot print of the exception handlers.  But some processors
may not offer these instructions.  And on some processors, the instructions
may cost additional cycles compared to a sequence of individual load and
store instructions.

Answer yes to use the lmw and stmw instructions.
If unsure, answer yes.
.

KDB_CONS_OF1275 "Enable the Open Firmware debug console?" text
The Open Firmware debug console is great for debugging kernel initialization.
It is useable without the need to memory map any devices, and thus it can
be used to debug the kernel's memory initialization.

But it will probably conflict with user level device drivers.  If you intend
to execute user level device drivers, then enable another debug console
which will activate later in the kernel boot process.  You can use multiple
debug consoles: first the Open Firmware console, and then a second console
which deactivates the Open Firmware console.

If unsure about this option, answer yes.
.

KDB_CONS_PSIM_COM       "Enable the psim com-port debug console?" text
This debug console uses psim's com port.  It activates after the kernel
enables memory mapping.  It provides a much faster alternative to the
Open Firmware console (the Open Firmware console must flush the TLB for
every printed character!).

To activate the com port in psim, include the following lines in your 
psim device tree file:
/iobus@0xe0000000/com@0xe0000000/reg 0xe0000000 8
/aliases/com /iobus@0xe0000000/com@0xe0000000

If unsure about this option, answer yes.
.

ppc_debug_consoles	"Consoles"

menu ppc_debug_consoles
	KDB_CONS_OF1275
	KDB_CONS_PSIM_COM

default KDB_CONS_OF1275 from y
default KDB_CONS_PSIM_COM from y

